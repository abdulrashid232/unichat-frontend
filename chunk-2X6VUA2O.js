import{a as i,b as a,f as h,i as c,j as S,l as o,m as u,n as b,p as l,s as p,v as g,va as j}from"./chunk-HSJBYG5P.js";var m=class d{constructor(e){this.http=e;this.loadChatHistory().subscribe()}API_URL="https://unichat-backend.onrender.com/api/chat";SESSIONS_URL="https://unichat-backend.onrender.com/api/sessions";currentSessionSubject=new h(null);currentSession$=this.currentSessionSubject.asObservable();sessionsSubject=new h([]);sessions$=this.sessionsSubject.asObservable();loadingSubject=new h(!1);loading$=this.loadingSubject.asObservable();errorSubject=new h(null);error$=this.errorSubject.asObservable();sendNewMessage(e,t){return this.loadingSubject.next(!0),this.errorSubject.next(null),this.http.post(`${this.API_URL}/message`,{message:e,topic:t}).pipe(l(s=>{let{session:r}=s.data;r?.id&&this.getSessionById(r.id).subscribe()}),u(()=>this.loadingSubject.next(!1)),o(this.handleErrorWithLoading()))}sendMessageToSession(e,t,s){if(!e)return c(()=>new Error("Session ID is required"));this.loadingSubject.next(!0),this.errorSubject.next(null);let r=this.currentSessionSubject.value;if(r&&r.id===e){let n={id:`temp-${Date.now()}`,text:t,sender:"user",timestamp:new Date,conversationId:e,topic:s??r.topic},f=[...r.messages||[],n];this.currentSessionSubject.next(a(i({},r),{messages:f}))}return this.http.post(`${this.API_URL}/sessions/${e}/message`,{message:t,topic:s}).pipe(b(n=>this.getSessionById(e)),o(n=>(r&&this.currentSessionSubject.next(r),this.handleErrorWithLoading()(n))),u(()=>this.loadingSubject.next(!1)))}loadChatHistory(){return this.loadingSubject.next(!0),this.errorSubject.next(null),this.http.get(`${this.API_URL}/history`).pipe(S(e=>{if(!e.success)throw new Error(e.error??"Failed to load chat history");return e.data}),l(e=>{let t=(e.sessions||[]).map(s=>a(i({},s),{createdAt:new Date(s.createdAt),updatedAt:new Date(s.updatedAt),lastMessageAt:new Date(s.lastMessageAt),messages:(s.messages||[]).map(r=>a(i({},r),{timestamp:new Date(r.timestamp)}))}));this.sessionsSubject.next(t)}),u(()=>this.loadingSubject.next(!1)),o(this.handleErrorWithLoading()))}getSessionById(e){return e?(this.loadingSubject.next(!0),this.errorSubject.next(null),this.http.get(`${this.API_URL}/sessions/${e}`).pipe(S(t=>{if(!t.success)throw new Error(t.error??"Failed to load session");let s=t.data;return a(i({},s),{createdAt:new Date(s.createdAt),updatedAt:new Date(s.updatedAt),lastMessageAt:new Date(s.lastMessageAt),messages:(s.messages??[]).map(n=>a(i({},n),{timestamp:new Date(n.timestamp)}))})}),l(t=>{this.currentSessionSubject.next(t);let r=this.sessionsSubject.value.map(n=>n.id===t.id?a(i({},n),{title:t.title,lastMessageAt:t.lastMessageAt}):n);this.sessionsSubject.next(r)}),u(()=>this.loadingSubject.next(!1)),o(this.handleErrorWithLoading()))):c(()=>new Error("Session ID is required"))}deleteSession(e){return e?(this.loadingSubject.next(!0),this.errorSubject.next(null),this.http.delete(`${this.SESSIONS_URL}/${e}`).pipe(l(()=>{let s=this.sessionsSubject.value.filter(r=>r.id!==e);this.sessionsSubject.next(s),this.currentSessionSubject.value?.id===e&&this.currentSessionSubject.next(null)}),u(()=>this.loadingSubject.next(!1)),o(this.handleErrorWithLoading()))):c(()=>new Error("Session ID is required"))}clearChatHistory(){return this.loadingSubject.next(!0),this.errorSubject.next(null),this.http.delete(`${this.API_URL}/history`).pipe(l(()=>{this.sessionsSubject.next([]),this.currentSessionSubject.next(null)}),u(()=>this.loadingSubject.next(!1)),o(this.handleErrorWithLoading()))}handleErrorWithLoading(){return e=>(this.loadingSubject.next(!1),this.handleError(e))}handleError(e){let t="An unknown error occurred";return e.error instanceof ErrorEvent?t=`Error: ${e.error.message}`:e.error?.message?t=e.error.message:e.message&&(t=e.message),this.errorSubject.next(t),console.error("Chat service error:",t),c(()=>new Error(t))}static \u0275fac=function(t){return new(t||d)(g(j))};static \u0275prov=p({token:d,factory:d.\u0275fac,providedIn:"root"})};export{m as a};
